API:

POST /token/ - Получение токена с использованием имени пользователя и пароля.
POST /token/refresh/ - Обновление существующего токена.
POST /token/verify/ - Проверка валидности токена.
Пользователи
Регистрация пользователя
POST /register/ - Зарегистрировать нового пользователя.
Параметры запроса:
username (строка) - Логин пользователя.
password (строка) - Пароль пользователя.
Пример запроса:
{
    "username": "example_user",
    "password": "example_password"
}
Пример ответа:
{
    "message": "Пользователь успешно зарегистрирован."
}
Вход пользователя
POST /login/ - Аутентификация пользователя.
Параметры запроса:
username (строка) - Логин пользователя.
password (строка) - Пароль пользователя.
Пример запроса:
{
    "username": "example_user",
    "password": "example_password"
}
Пример ответа:
{
    "token": "your_access_token"
}
Выход пользователя
POST /logout/ - Выход пользователя.
Требуется аутентификация.
Пример ответа:
{
    "message": "Пользователь успешно вышел."
}
Категории
Получение списка категорий
GET /categories/ - Получить список всех категорий.
Параметры запроса:
name (строка, опционально) - Фильтр по имени категории.
Пример ответа:
[
    {
        "id": 1,
        "name": "Категория 1"
    },
    {
        "id": 2,
        "name": "Категория 2"
    }
]
Создание новой категории
POST /categories/ - Создать новую категорию.
Требуется аутентификация как администратор.
Параметры запроса:
name (строка) - Название категории.
Пример запроса:
{
    "name": "Новая категория"
}
Пример ответа:
{
    "id": 3,
    "name": "Новая категория"
}
Работа с отдельной категорией
GET /category/{id}/ - Получить информацию о конкретной категории.
PUT /category/{id}/ - Обновить информацию о категории.
DELETE /category/{id}/ - Удалить категорию.
Продукты
Получение списка продуктов
GET /products/ - Получить список всех продуктов.
Параметры запроса:
category (целое число, опционально) - Фильтр по ID категории.
name (строка, опционально) - Фильтр по названию продукта.
price (строка, опционально) - Фильтр по диапазону цен (например, "10-50").
Пример ответа:
[
    {
        "id": 1,
        "name": "Продукт 1",
        "price": 20.0
    },
    {
        "id": 2,
        "name": "Продукт 2",
        "price": 30.0
    }
]
Создание нового продукта
POST /products/ - Создать новый продукт.
Требуется аутентификация как администратор.
Параметры запроса:
name (строка) - Название продукта.
price (число) - Цена продукта.
category (целое число) - ID категории продукта.
Пример запроса:
{
    "name": "Новый продукт",
    "price": 25.0,
    "category": 1
}
Пример ответа:
{
    "id": 3,
    "name": "Новый продукт",
    "price": 25.0
}
Работа с отдельным продуктом
GET /product/{id}/ - Получить информацию о конкретном продукте.
PUT /product/{id}/ - Обновить информацию о продукте.
DELETE /product/{id}/ - Удалить продукт.
Получение характеристик продукта
GET /product/{id}/characteristics/ - Получить список характеристик конкретного продукта.
Пример ответа:
[
    {
        "id": 1,
        "name": "Характеристика 1",
        "value": "Значение 1"
    },
    {
        "id": 2,
        "name": "Характеристика 2",
        "value": "Значение 2"
    }
]
Корзина
Добавление продукта в корзину
POST /product/{id}/add-to-cart/ - Добавить продукт в корзину.
Требуется аутентификация.
Параметры запроса:
quantity (целое число, опционально) - Количество продуктов (по умолчанию 1).
characteristic_id (целое число, опционально) - ID характеристики продукта.
Пример запроса:
{
    "quantity": 2,
    "characteristic_id": 1
}
Пример ответа:
{
    "message": "Продукт успешно добавлен в корзину."
}
Удаление продукта из корзины
POST /product/{id}/remove-from-cart/ - Удалить продукт из корзины.
Требуется аутентификация.
Параметры запроса:
quantity (целое число, опционально) - Количество продуктов (по умолчанию 1).
Пример запроса:
{
    "quantity": 1
}
Пример ответа:
{
    "message": "Продукт успешно удален из корзины."
}
Избранное
Добавление продукта в избранное
POST /product/add-to-favorites/ - Добавить продукт в список избранных.
Требуется аутентификация.
Параметры запроса:
product_id (целое число) - ID продукта.
Пример запроса:
{
    "product_id": 1
}
Пример ответа:
{
    "message": "Продукт успешно добавлен в избранное."
}
Удаление продукта из избранного
POST /product/remove-from-favorites/ - Удалить продукт из списка избранных.
Требуется аутентификация.
Параметры запроса:
product_id (целое число) - ID продукта.
Пример запроса:
{
    "product_id": 1
}
Пример ответа:
{
    "message": "Продукт успешно удален из избранного."
}
Продавцы
Получение списка продавцов
GET /sellers/ - Получить список всех продавцов.
Пример ответа:
[
    {
        "id": 1,
        "name": "Продавец 1"
    },
    {
        "id": 2,
        "name": "Продавец 2"
    }
]
Создание нового продавца
POST /sellers/ - Создать нового продавца.
Требуется аутентификация как администратор.
Параметры запроса:
name (строка) - Название продавца.
Пример запроса:
{
    "name": "Новый продавец"
}
Пример ответа:
{
    "id": 3,
    "name": "Новый продавец"
}
Работа с отдельным продавцом
GET /seller/{id}/ - Получить информацию о конкретном продавце.
PUT /seller/{id}/ - Обновить информацию о продавце.
DELETE /seller/{id}/ - Удалить продавца.
Заявки продавцов
Создание заявки на продавца
POST /seller-application/ - Создать новую заявку на статус продавца.
Требуется аутентификация.
Параметры запроса:
name (строка) - Название продавца.
Пример запроса:
{
    "name": "Заявка на продавца"
}
Пример ответа:
{
    "id": 3,
    "name": "Заявка на продавца",
    "status": "pending"
}
Получение списка заявок продавцов
GET /seller-applications/ - Получить список всех заявок на статус продавца.
Требуется аутентификация как администратор.
Пример ответа:
[
    {
        "id": 1,
        "name": "Заявка 1",
        "status": "approved"
    },
    {
        "id": 2,
        "name": "Заявка 2",
        "status": "pending"
    }
]
Работа с отдельной заявкой продавца
GET /seller-application/{id}/ - Получить информацию о конкретной заявке на статус продавца.
PUT /seller-application/{id}/ - Обновить информацию о заявке на статус продавца.
DELETE /seller-application/{id}/ - Удалить заявку на статус продавца.
Документация
GET /docs/ - Получить список разделов документации API.
Пример ответа:
[
    {
        "id": 1,
        "title": "Раздел 1"
    },
    {
        "id": 2,
        "title": "Раздел 2"
    }
]